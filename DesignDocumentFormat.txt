Design Document Format


LinearEquation class:

	Instance Variables:
		// Create a bunch of variables
		// Decimal format for formatting
		DecimalFormat dc1 = (#.00)
		private int x1 // First x coordinate
		private int x2 // Second x coordinate
		private int y1 // First y coordinate
		private int y2 // Second y coordinate
		private double slopeValue // Slope
		private double slopeString // For eqaution
		private double yIntercept // y-intercept
		private String equation // string of equation 
		private double distanceBetweenPoints // distance

	Constructor
		// Set up instance variables
		public LinearEquation(int x1, int y1, int x2, int y2)

	// Calculations
		Do calculation for slope (y2 - y1) / (x2 - x1)

		Find y intercept by
			- y = mx + b
			- b = y - mx
			- yIntercept = y1 - (slope * x1)

		Equation is y = mx + b

	// Using methods from the math class
		Distance between two points 
		distanceBetweenPoints = √((x2 - x1)² + (y2 - y1)²)


	Methods
	
		public String toString()
		This method will display all relevant information about this instance including:
		X and Y coordinate information
		Pairs (Casting to doubles)
		Slope, y-intercept, and Slope Intercept Form equation
		Distance b/t points

		public String solveWithThirdCoordinate(int x)
		This method will take in a third x coordinate and 
		use it to solve for the y value based on the linear equation.
		Return a string of the information in (x,y) form

EquationRunner.java:

	Print out a welcome message first 

	Step 1: Ask user to enter first coordinate point w. scanner
	Step 2: Ask user to enter second coordinate point w. scanner
	Step 3: Find the index of ‘,’ using indexOf(), Classified as comma index.
	Step 4: X1 is substring from (0, comma index), Y1 is substring from (comma index + 1, (length - 1)).
	Step 5: Repeat step 4 for X2 and Y2
	Step 6: Construct linear equation object with the information on coordinates
	Step 7: Call toString() to output information
	Step 8: Ask for a third x-value to solve on the linear equation
	Step 9: print out the solution by calling solveWithThirdCoordinate(x) with the third x value to get the return value
	Step 10: We done :D
